---
- name: Add guests to inventory

  hosts: localhost

  become: true

  tasks:

    - name: Add guest to inventory
      ansible.builtin.add_host:
        name: "{{ guest_hostname }}"
        groups:
          - guests
        ansible_user: molecule
        ansible_host: "{{ guest_address }}"
        ansible_port: "{{ guest_port }}"
        ansible_ssh_private_key_file: "{{ kvm_keypair }}"
        partitioning_method: "{{ guest.installer_partitioning_method }}"
        disk_location: "{{ cache_dir }}/{{ guest.installer_hostname }}.img"
        disk_size: "{{ guest.installer_disk_size }}"
        disk_index: "{{ disk_index }}"
      vars:
        guest_hostname: "{{ guest.installer_hostname }}"
        bridge_address: "{{ guest.installer_interface.ipaddress }}"
        guest_address: "{{ bridge_address }}"
        guest_port: 22
      loop_control:
        loop_var: guest
        index_var: disk_index
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guests }}"


- name: Reconfigure guest disks

  hosts: guests

  gather_facts: false

  become: true

  roles:
    - nephelaiio.growfs

  pre_tasks:

    - name: Query KVM guest info
      community.libvirt.virt:
        command: info
      register: libvirt_info
      delegate_to: localhost
      run_once: true

    - name: Shut down guest
      when:
        - inventory_hostname in libvirt_info
        - libvirt_info[inventory_hostname].state == "running"
      block:

        - name: Wait for connection
          ansible.builtin.wait_for_connection:
            timeout: 30
          tags: reconfigure

        - name: Shut down guest
          community.general.shutdown:

        - name: Wait for shutdown to complete
          ansible.builtin.pause:
            seconds: 30

        - name: Force kvm guest poweroff
          ansible.builtin.command: virsh destroy {{ inventory_hostname }}
          ignore_errors: true
          failed_when: false
          changed_when: false
          delegate_to: localhost

        - name: Wait for poweroff to complete
          ansible.builtin.pause:
            seconds: 30

    - name: Reconfigure guest disks
      delegate_to: localhost
      block:

        - name: Stat kvm base disk
          ansible.builtin.stat:
            path: "{{ cache_dir }}/{{ inventory_hostname }}.img"
          register: guest_disk_query

        - name: Resize kvm base disks
          ansible.builtin.command: "qemu-img resize -f raw {{ guest_disk }} {{ guest_disk_size }}"
          vars:
            guest_disk: "{{ cache_dir }}/{{ inventory_hostname }}.img"
            guest_disk_size: "{{ 2 * (disk_size | int) }}"
          when: (guest_disk_size | int) > (guest_disk_query.stat.size | int)

        - name: Stat additional kvm disk
          ansible.builtin.stat:
            path: "{{ cache_dir }}/{{ inventory_hostname }}.add.img"
          register: guest_addisk_query

        - name: Create additional kvm disk for lvm instances
          ansible.builtin.command: "qemu-img create -f raw {{ guest_disk }} {{ guest_disk_size }}"
          args:
            creates: "{{ guest_disk }}"
          vars:
            guest_disk: "{{ cache_dir }}/{{ inventory_hostname }}.add.img"
            guest_disk_size: "{{ 2 * (disk_size | int) }}"
          when:
            - not guest_addisk_query.stat.exists
            - partitioning_method == 'lvm'
          notify: attach kvm guest disk

        - name: Manage permissions for extra kvm guest disk
          ansible.builtin.file:
            path: "{{ guest_disk }}"
            owner: libvirt-qemu
            group: kvm
            mode: 0660
          vars:
            guest_disk: "{{ cache_dir }}/{{ inventory_hostname }}.add.img"
          when: partitioning_method == 'lvm'

        - name: Flush handlers
          ansible.builtin.meta: flush_handlers

        - name: Start kvm guest
          community.libvirt.virt:
            name: "{{ inventory_hostname }}"
            state: running

    - name: Wait for connection
      ansible.builtin.wait_for_connection:
        timeout: 120
      tags: reconfigure

    - name: Gather facts
      ansible.builtin.setup:
      tags: always

  handlers:

    - name: Create definition for additional kvm guest disk
      ansible.builtin.template:
        src: disk.xml.j2
        dest: "{{ guest_disk_xml }}"
        owner: libvirt-qemu
        group: kvm
        mode: 0660
      vars:
        guest_hostname: "{{ inventory_hostname }}"
        guest_disk_extra_path: "{{ cache_dir }}/{{ inventory_hostname }}.add.img"
        guest_disk_format: raw
        guest_disk_xml: "{{ cache_dir }}/{{ guest_hostname }}.disk.xml"
      delegate_to: localhost
      listen: attach kvm guest disk

    - name: Attach additional kvm guest disk
      ansible.builtin.command: "virsh attach-device {{ guest_hostname }} --file {{ guest_disk_xml }} --config"
      vars:
        guest_hostname: "{{ inventory_hostname }}"
        guest_disk_xml: "{{ cache_dir }}/{{ guest_hostname }}.disk.xml"
      delegate_to: localhost
      listen: attach kvm guest disk
