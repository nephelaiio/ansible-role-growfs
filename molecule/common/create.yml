---
- name: Spawn KVM guests

  hosts: localhost

  become: true

  pre_tasks:

    - name: Install disk utils
      ansible.builtin.apt:
        name:
          - parted
          - lvm2

  tasks:

    - name: Query KVM guest info
      community.libvirt.virt:
        command: info
      register: libvirt_info

    - name: Filter uninitialized KVM guests
      ansible.builtin.set_fact:
        guest_info: "{{ _guest_info }}"
      vars:
        _guest_names: "{{ libvirt_info.keys() }}"
        _target_names: "{{ guests | map(attribute='installer_hostname') | list }}"
        _target_create: "{{ _target_names | difference(_guest_names) }}"
        _guest_info: "{{ guests | selectattr('installer_hostname', 'in', _target_create) }}"

    - name: Cache installer iso
      ansible.builtin.get_url:
        url: "{{ iso_installer.url }}"
        dest: "{{ iso_installer.dest | urlsplit('path') }}"

    - name: Build guest installer isos
      ansible.builtin.include_role:
        name: nephelaiio.ubuntu_installer
      vars:
        ubuntu_installer_interface_name: enp1s0
        ubuntu_installer_target_dir: "{{ cache_dir }}"
        ubuntu_installer_image_url: "{{ iso_installer.dest }}"
        ubuntu_installer_hostname: "{{ guest.installer_hostname }}"
        ubuntu_installer_username: molecule
        ubuntu_installer_password: "{{ 'molecule' | password_hash('sha512') }}"
        ubuntu_installer_sshkey:
          - "{{ lookup('file', kvm_keypair + '.pub') }}"
        ubuntu_installer_interface: "{{ guest.installer_interface }}"
        ubuntu_installer_partman_method: "{{ guest.installer_partitioning_method }}"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guest_info }}"

    - name: Create KVM guest disks
      ansible.builtin.command: "qemu-img create {{ guest_disk }} {{ guest_disk_size }}"
      args:
        creates: "{{ guest_disk }}"
      vars:
        guest_disk: "{{ cache_dir }}/{{ guest.installer_hostname }}.img"
        guest_disk_size: "{{ guest.installer_disk_size }}"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guest_info }}"

    - name: Manage permissions for KVM guest disks
      ansible.builtin.file:
        path: "{{ guest_disk }}"
        owner: libvirt-qemu
        group: kvm
        mode: 0640
      vars:
        guest_disk: "{{ cache_dir }}/{{ guest.installer_hostname }}.img"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guest_info }}"

    - name: Create KVM guest
      community.libvirt.virt:
        xml: "{{ xml_template }}"
        command: define
      vars:
        guest_hostname: "{{ guest.installer_hostname }}"
        guest_bridge: "{{ bridge_name }}"
        guest_iso: "{{ cache_dir }}/{{ guest_hostname }}.iso"
        guest_disk_path: "{{ cache_dir }}/{{ guest.installer_hostname }}.img"
        guest_mac: "{{ '52:54:00' | random_mac(seed=guest_hostname) }}"
        guest_disk_format: raw
        xml_template: "{{ lookup('template', 'vm.xml.j2') }}"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guest_info }}"

    - name: Start KVM guest
      community.libvirt.virt:
        name: "{{ guest_hostname }}"
        state: running
      vars:
        guest_hostname: "{{ guest.installer_hostname }}"
      loop_control:
        loop_var: guest
        label: "{{ guest.installer_hostname }}"
      loop: "{{ guest_info }}"
