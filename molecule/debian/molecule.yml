---
dependency:
  name: galaxy
  options:
    role-file: requirements.yml
    requirements-file: requirements.yml
driver:
  name: default
  options:
    managed: false
    ansible_connection_options:
      ansible_connection: local
platforms:
  - name: installer
provisioner:
  name: ansible
  log: true
  env:
    ANSIBLE_VERBOSITY: ${MOLECULE_VERBOSITY:-0}
  config_options:
    defaults:
      interpreter_python: auto_silent
      callbacks_enabled: ansible.posix.profile_tasks
      callback_whitelist: profile_tasks, timer, yaml
  playbooks:
    prepare: ../common/prepare.yml
    create: ../common/create.yml
    converge: ../common/converge.yml
    verify: ../common/verify.yml
    destroy: ../common/destroy.yml
    side_effect: ../common/reboot.yml
  inventory:
    hosts:
      all:
        vars:
          growfs_device_filter: "vd.*"

          molecule_scenario: "${MOLECULE_SCENARIO_NAME}"
          molecule_distro: "{{ lookup('env', 'MOLECULE_DISTRO') }}"
          molecule_installer_url: "{{ lookup('env', 'MOLECULE_ISO') }}"
          molecule_install_dir: "{{ lookup('env', 'MOLECULE_OUTPUT_DIR', default='/tmp/logs') }}"

          libvirt_network: "{{ libvirt_project | basename | replace('_', '-') | replace('.', '-') }}"
          libvirt_netaddr: "172.31.249.0/24"
          libvirt_address: "{{ libvirt_netaddr | ansible.utils.nthhost(1) }}"
          libvirt_project: "{{ lookup('ansible.builtin.env', 'MOLECULE_PROJECT_DIRECTORY') }}"
          libvirt_path: "{{ libvirt_project }}/libvirt/{{ libvirt_network }}"
          libvirt_scenario: "${MOLECULE_SCENARIO_NAME}"
          libvirt_privkey: "{{ libvirt_path }}/id_rsa"
          libvirt_platforms:
            - name: "{{ molecule_distro }}-lvm-10g"
              iso: "{{ libvirt_path }}/{{ molecule_distro }}-lvm-10g.iso"
              size: "{{ 10*(1024**3) }}"
              interface:
                static: true
                ipaddress: "{{ libvirt_netaddr | ansible.utils.nthhost(2) }}"
                network: "{{ libvirt_netaddr | ansible.utils.ipaddr('network') }}"
                netmask: "{{ libvirt_netaddr | ansible.utils.ipaddr('netmask') }}"
                gateway: "{{ libvirt_address }}"
                nameservers:
                  - 1.1.1.1
                  - 8.8.8.8
              partitioning_method: lvm
            - name: "{{ molecule_distro }}-static-10g"
              iso: "{{ libvirt_path }}/{{ molecule_distro }}-static.iso"
              size: "{{ 10*(1024**3) }}"
              interface:
                static: true
                ipaddress: "{{ libvirt_netaddr | ansible.utils.nthhost(3) }}"
                network: "{{ libvirt_netaddr | ansible.utils.ipaddr('network') }}"
                netmask: "{{ libvirt_netaddr | ansible.utils.ipaddr('netmask') }}"
                gateway: "{{ libvirt_address }}"
                nameservers:
                  - 1.1.1.1
                  - 8.8.8.8
              partitioning_method: regular

verifier:
  name: ansible
scenario:
  create_sequence:
    - dependency
    - create
  prepare_sequence:
    - dependency
    - prepare
  converge_sequence:
    - dependency
    - converge
  verify_sequence:
    - dependency
    - verify
  test_sequence:
    - dependency
    - create
    - prepare
    - converge
    - side_effect
    - verify
